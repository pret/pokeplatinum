/*
 * datagen-events
 *
 * Usage: datagen-events <EVENT_FILE> <OUTPUT_FILE> <OUTPUT_DIR>
 *
 * This program is responsible for generating c headers from map event data files
 * (/res/field/events/{map}.json).
 *
 * <EVENT_FILE> is expected to be a JSON file that includes an array "object_events"
 * that lists the object events that exist on a map. Each object event should have a
 * unique "id" value which will be used to generate constants referencing the object event.
 *
 */

#include <algorithm>
#include <cctype>
#include <cstdlib>
#include <filesystem>
#include <iostream>
#include <optional>
#include <regex>
#include <string>

#include "datagen.h"

static const std::string sHeaderMessage = ""
                                          "/*\n"
                                          " * This header was generated by datagen-events; DO NOT MODIFY IT!!!\n"
                                          " */"
                                          "";

static void Usage(std::ostream &ostr)
{
    ostr << "Usage: datagen-events EVENT_FILE OUTPUT_FILE OUTPUT_DIR" << std::endl;
    ostr << std::endl;
    ostr << "Generates c headers from events data files (/res/field/events/{map}.json)" << std::endl;
}

int main(int argc, char **argv)
{
    if (argc == 1) {
        Usage(std::cout);
        return EXIT_SUCCESS;
    }

    fs::path eventsSourceFile = argv[1];
    fs::path eventDestFile = argv[2];
    fs::path eventRoot = argv[3];
    fs::path eventDestPath = eventRoot / eventDestFile;

    std::string eventObjectsRegistryJson = ReadWholeFile(eventsSourceFile);
    rapidjson::Document eventObjectsDoc;
    rapidjson::ParseResult formOk = eventObjectsDoc.Parse(eventObjectsRegistryJson.c_str(), eventObjectsRegistryJson.length());
    if (!formOk) {
        std::exit(EXIT_FAILURE);
    }

    std::ofstream byEventObjectsHeader(eventDestPath.c_str());
    byEventObjectsHeader << sHeaderMessage << "\n"
                    << "#ifndef POKEPLATINUM_GENERATED_OBJECT_EVENTS_H\n"
                    << "#define POKEPLATINUM_GENERATED_OBJECT_EVENTS_H\n"
                    << "\n";

    const rapidjson::Value& eventArray = eventObjectsDoc["object_events"];
    for (int i = 0; i != eventArray.Size(); ++i)
    {
        if(eventArray[i].HasMember("id")) {
            byEventObjectsHeader << "#define " << eventArray[i]["id"].GetString() << " " << i << "\n";
        }
    }

    byEventObjectsHeader << "\n"
                    << "#endif // POKEPLATINUM_GENERATED_SPECIES_LEARNSETS_BY_TUTOR_H\n";
    byEventObjectsHeader.close();

    return EXIT_SUCCESS;
}